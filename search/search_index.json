{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#gradle-analytics-plugin","title":"Gradle Analytics Plugin","text":"<p>Have you encountered a lengthy build time despite using the best practices? Are you curious how top tech companies manage their massive project build times?</p> <p>The build is an important process. If we want to have a faster and more efficient build, we need to understand how it works for our project.</p> <p>If you can't measure it, you can't improve it. (Lord Kelvin)</p> <p>The Gradle Analytics Plugin helps you analyze and measure your project builds. It provides unique visual and text metrics in HTML format.</p> <p>To understand the metrics and report that plugin provides, It is required to understand Gradle basics and how this build system works.https://docs.gradle.org/current/userguide/what_is_gradle.html</p> <p>Important</p> <p>Support the project by donation, The first stage of donation expectation is $1500 and $0 donated till now.\\n Goto Donation</p> <p>Below you can see the metrics provided by the plugin \ud83d\udc47</p>"},{"location":"#build-status","title":"Build Status","text":"<p>An overview of metrics results of the <code>requested task</code> in the build processes over the aforementioned period.</p> <p></p> <p></p>"},{"location":"#initialization-process","title":"Initialization Process","text":"<p>Gradle supports single and multi-project builds. During the initialization process, Gradle determines which projects are going to take part in the build, and creates a Project instance for each of these projects.</p> <p>It denotes the average initialization process time over the report period.</p> <p></p> <p></p>"},{"location":"#configuration-process","title":"Configuration Process","text":"<p>Constructs and configures the task graph for the build and then determines which tasks need to run and in which order, based on the task the user wants to run.</p> <p>It shows the average configuration process time over the report period.</p> <p></p> <p></p>"},{"location":"#dependency-resolve-process","title":"Dependency Resolve Process","text":"<p>Downloading the project's dependencies is one of the configuration process stages.</p> <p>It represents the download/resolve process average duration during the report period.</p> <p></p> <p></p>"},{"location":"#execution-process","title":"Execution Process","text":"<p>Runs the selected tasks based on <code>requested tasks</code> task tree. Gradle executes <code>requested task</code> according to the dependency order.</p> <p>It represents the Execution Process average duration during the report period.</p> <p></p> <p></p>"},{"location":"#modules-execution-process","title":"Modules Execution Process","text":"<p>It represents the median execution process time of each module over the report period.</p> <p> </p> <p></p>"},{"location":"#overall-build-process","title":"Overall Build Process","text":"<p>It represents the average duration of overall build process.</p> <p></p> <p></p>"},{"location":"#modules-source-count","title":"Modules Source Count","text":"<p>It represents the project and its modules source file count. (files with extension of <code>kt</code>, <code>java</code>).</p> <p></p> <p></p>"},{"location":"#modules-source-size","title":"Modules Source Size","text":"<p>It represents the project and its modules source file size.</p> <p></p> <p></p>"},{"location":"#modules-method-count","title":"Modules Method Count","text":"<p>It represents the project and its modules source method count.</p> <p></p> <p></p>"},{"location":"#cache-hit","title":"Cache Hit","text":"<p>Gradle creates a cache for the executed task to be reused in the next incremental builds, the more cached tasks lead to faster builds.</p> <p>It represents the project and modules tasks average cache hit rate (tasks run with <code>FROM_CACHE</code> or <code>UP_TO_DATE</code>).</p> <p></p> <p></p>"},{"location":"#successful-build-rate","title":"Successful Build Rate","text":"<p>It represents the successful build rate of the <code>requested task</code> during the report period.</p> <p></p> <p></p>"},{"location":"#modules-crash-count","title":"Modules Crash Count","text":"<p>It represents how many build failures happened to the <code>requested task</code> execution caused by project modules during the report period.</p> <p></p> <p></p>"},{"location":"#parallel-execution-rate","title":"Parallel Execution Rate","text":"<p>Gradle uses CPU cores to execute more tasks simultaneously, leading to a faster build.</p> <p>It represents a rate of how much time was saved in the execution of the build process with parallel execution versus serial elapsed time.</p> <p></p> <p></p>"},{"location":"#modules-dependency-graph","title":"Modules Dependency Graph","text":"<p>It represents the project module's dependency graph and with it connection types.</p> <p>Modules in the graph are clickable (shows first/deep nodes). Modules with warm colors are more dependent modules, and it is recommended to have fewer warm color modules because, by applying any change to these modules, all other dependent modules need to rebuild, which takes more time and resources.</p> <p></p> <p></p>"},{"location":"#redundant-dependency-connection","title":"Redundant Dependency Connection","text":"<p>it represents the project modules redundant dependency connection.</p> <p></p> <p></p>"},{"location":"#modules-execution-timeline","title":"Modules Execution Timeline","text":"<p>It represents the latest modules execution process timeline graph.</p> <p></p> <p></p>"},{"location":"#modules-build-heatmap","title":"Modules Build Heatmap","text":"<p>Shows how many times a module was built during the report period.</p> <p>Each bar has the name of the module and the number of dependent modules, smaller warm bars lead to faster builds as those modules with warm colors have more dependent modules.</p> <p>In addition, it helps to modify the modular structure by tracing the graph and finding the cause to avoid rebuilding the modules that are most shared with others.</p> <p></p> <p></p>"},{"location":"#non-cacheable-tasks","title":"Non-cacheable Tasks","text":"<p>These tasks are executed in the <code>requested task</code> tree without being cached. Try to avoid creating tasks that are not cacheable.</p> <p></p> <p></p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#101","title":"1.0.1","text":"<ul> <li>Issue 105</li> <li>Issue 121</li> <li>Upgrade gradle version to <code>8.0.2</code></li> <li>Upgrade kotlin and other dependencies</li> </ul>"},{"location":"changelog/#100-beta9","title":"1.0.0-beta9","text":"<ul> <li>Fix critical issues</li> </ul>"},{"location":"changelog/#100-beta8","title":"1.0.0-beta8","text":"<ul> <li>Feature 81</li> <li>Used/Available worker count added in console report</li> <li><code>upcoming-milestone</code>, <code>social-press</code> added in documentation </li> <li>More logs added in the <code>build logger</code> and <code>report logger</code></li> </ul>"},{"location":"changelog/#hotfix-100-beta7","title":"HotFix - 1.0.0-beta7","text":"<ul> <li>Modules Dependency Graph first node selection bug fixed</li> </ul>"},{"location":"changelog/#100-beta6","title":"1.0.0-beta6","text":"<ul> <li>Issue 89</li> <li>Tracking All Branches feature added Feature 52</li> <li>Issue 90</li> <li>Redundant Dependency Connection Metric PR</li> <li>Internal Logger PR</li> <li>Change report font style</li> <li>Upgrade Gradle version to 7.6 PR</li> <li>Modules Dependency Graph selection feature added</li> <li>Fix minor critical bugs</li> </ul>"},{"location":"changelog/#hotfix-100-beta5","title":"HotFix - 1.0.0-beta5","text":"<ul> <li>Issue 77</li> </ul>"},{"location":"changelog/#100-beta4","title":"1.0.0-beta4","text":"<ul> <li>Feature 45</li> <li>Issue 61</li> <li>Issue 67</li> <li>Issue 68</li> <li>Issue 69</li> <li>Issue 70</li> <li>Issue 71</li> <li>Issue 72</li> <li>Issue 73</li> </ul>"},{"location":"changelog/#100-beta3","title":"1.0.0-beta3","text":"<ul> <li>Documentation dark mode added</li> <li>Report dark mode added</li> <li>Plugin measurement optimized</li> <li>Minor issues fixed</li> </ul>"},{"location":"changelog/#100-beta2","title":"1.0.0-beta2","text":"<ul> <li>Issue 46</li> <li>Issue 47</li> </ul>"},{"location":"changelog/#100-beta1","title":"1.0.0-beta1","text":"<ul> <li>Hello World :)</li> </ul>"},{"location":"community/","title":"Community","text":""},{"location":"community/#community","title":"Community","text":"<p>Gradle Analytics Plugin has an active discord channel for everyone, feel free to join our community via discord.gg/CJSeE9y8D3.</p>"},{"location":"donation/","title":"Donation \u2764\ufe0f","text":""},{"location":"donation/#donation","title":"Donation \u2764\ufe0f","text":"<p>Gradle Analytics Plugin is Open Source and completely free, I spent more than a year analyzing build bottlenecks and finding a way to track them, and finally implemented it into the plugin.</p> <p>Of course, this project will be continued as a free open-source project. But to give me some energy, you can use either below ways to support me.</p> <p>The first stage of donation expectation is $1500 and $0 donated till now.</p> <p>Send me Bitcoin</p> <p>bc1q8ecepuax6je6s70j4l76nr978w34msc929sfuf</p> <p>Send me Tether(ERC-20)</p> <p>0x2f23a4F4502C5e699777f3F89da6Ba965C7800FF</p> <p>Send me Tether(TRC-20)</p> <p>TFkukvUMoiovcLU3BGbrzHkp5MerGqwEy4</p> <p>Send me BNB(Coin)</p> <p>bnb1qejsxgmvf9jpmf7ck5jwdq2xeh27ff2l3rmmxw</p> <p>Don't forget to tap the \u2b50 button on the project Github link.</p> <p>Thanks, Mehdi</p>"},{"location":"getting-report/","title":"Getting Report","text":""},{"location":"getting-report/#getting-report","title":"Getting Report","text":"<p>Gradle Analytics Plugin uses daily basis data to generate reports. So you could use the below instructions to generate your build analysis.</p> <p>Execute Gradle Task <pre><code>./gradlew reportAnalytics --task=\"REQUESTED_TASK\" --branch=\"BRANCH_NAME\" --period=\"can be like today, s:yyyy/MM/dd,e:yyyy/MM/dd, 1y, 4m, 38d, 3m 06d\"\n</code></pre></p> <p></p> <p>--period Examples</p> <ul> <li>today - Generates report only for the current day.</li> <li>1d - Generates report from 1 day ago till now.</li> <li>1m 3d - Generates report from 1 month and 3 days ago till now.</li> <li>1y - Generates report from 1 year ago till now.</li> <li>s:2022/03/24,e:2022/04/25 - Generates report from <code>2022/03/24</code> till <code>2022/04/25</code>.</li> </ul> <p>Plugin only holds the metrics results in the caching database up to one year.</p> <p></p> <p>To understand the metrics and report that plugin provides, It is required to understand Gradle basics and how this build system works.https://docs.gradle.org/current/userguide/what_is_gradle.html </p> <p></p>"},{"location":"license/","title":"License","text":""},{"location":"license/#license","title":"License","text":"<p>MIT License Copyright \u00a9 2022 Mehdi Janbarari (@janbarari)</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"privacy-policy/","title":"Privacy & Policy","text":""},{"location":"privacy-policy/#privacy-policy","title":"Privacy Policy","text":"<p>Gradle Analytics Plugin does NOT send any collected data to any server apart from the user's own database config. It uses offline HTML renders to provide the analytics, So there is no need to upload any data from the database.</p>"},{"location":"report-bug/","title":"Report Bug","text":""},{"location":"report-bug/#report-bug","title":"Report Bug","text":"<p>I appreciate reporting the bugs and crashes in the plugin. In order to submit please use either below ways:</p> <p>Github Link or Send Me Email</p> <p>You can submit the <code>build-log.txt</code> and <code>report-log.txt</code> log files inside the output directory to help us to reproduce the issue.</p>"},{"location":"request-feature/","title":"Request Feature","text":""},{"location":"request-feature/#request-feature","title":"Request Feature","text":"<p>I thankfully appreciate to send me your ideas about new features. In order to submit your ideas please use the below ways:</p> <p>Github Link or Send Me Email</p>"},{"location":"setup/","title":"Setup","text":""},{"location":"setup/#setup","title":"Setup","text":"<p>To set up the plugin in your project, follow the below instructions:</p>"},{"location":"setup/#step-1","title":"Step 1","text":"<p>Make sure your project uses Git VCS and Gradle version <code>6.1+</code>.</p> <p>Gradle Analytics Plugin uses Git terminal to get the branch names and latest HEAD commit hash.  so It is required for your project to use Git VCS.</p> <p></p>"},{"location":"setup/#step-2","title":"Step 2","text":"<p>Apply the Gradle Plugin to the root of your project.</p> KotlinGroovy <pre><code>plugins {\n    id(\"io.github.janbarari.gradle-analytics-plugin\") version \"1.0.1\"\n}\n</code></pre> <pre><code>plugins {\n    id 'io.github.janbarari.gradle-analytics-plugin' version '1.0.1'\n}\n</code></pre> <p>For legacy plugin application, see the Gradle Plugin Portal. </p>"},{"location":"setup/#step-3","title":"Step 3","text":"<p>Add plugin configuration in the root of your project.</p> KotlinGroovy <pre><code>gradleAnalyticsPlugin {\n    enabled = true // Optional: By default it's True.\n\n    database {\n        local = sqlite {\n            path = \"DATABASE_PATH\"\n            name = \"DATABASE_NAME\" // Don't add `.db` in the database name.\n            user = \"DATABASE_USER\" // Remove `user` if you want the plugin to create the DB.\n            password = \"DATABASE_PASSWORD\" // Remove `password` if you want the plugin to create the DB.\n        }\n        ci = mysql {\n            host = \"MYSQL_DATABASE_HOST\"\n            name = \"MYSQL_DATABASE_NAME\"\n            user = \"MYSQL_DATABASE_USER\"\n            password = \"MYSQL_DATABASE_PASSWORD\"\n            port = MYSQL_DATABASE_PORT // Optional: Default is 3306.\n        }\n    }\n\n    trackingTasks = setOf(\n        // Add your requested tasks to be analyzed, Example:\n        \":app:assembleDebug\",\n        \":jar\", \n        \":assemble\"\n    )\n\n    trackingBranches = setOf(\n        // requested tasks only analyzed in the branches you add here, Example:\n        \"master\",\n        \"develop\"\n    )\n\n    // Optional: Exclude modules that are not necessary like test or demo modules\n    excludeModules = setOf()\n\n    trackAllBranchesEnabled = false // Optional: Default is False.\n\n    outputPath = \"OUTPUT_REPORT_PATH\" // Optional: Default is project /build/ dir.\n}\n</code></pre> <pre><code>gradleAnalyticsPlugin {\n    enabled = true // Optional: By default it's True.\n\n    database {\n        local = sqlite {\n            path = 'DATABASE_PATH'\n            name = 'DATABASE_NAME' // Don't add `.db` in the database name.\n            user = 'DATABASE_USER' // Remove `user` if you want the plugin to create the DB.\n            password = 'DATABASE_PASSWORD' // Remove `password` if you want the plugin to create the DB.\n        }\n        ci = mysql {\n            host = 'MYSQL_DATABASE_HOST'\n            name = 'MYSQL_DATABASE_NAME'\n            user = 'MYSQL_DATABASE_USER'\n            password = 'MYSQL_DATABASE_PASSWORD'\n            port = MYSQL_DATABASE_PORT // Optional: Default is 3306.\n        }\n    }\n\n    trackingTasks = [\n        // Add your requested tasks to be analyzed, Example:\n        ':app:assembleDebug',\n        ':jar', \n        ':assemble'\n    ]\n\n    trackingBranches = [\n        // requested tasks only analyzed in the branches you add here, Example:\n        'master',\n        'develop'\n    ]\n\n    // Optional: Exclude modules that are not necessary like test or demo modules\n    excludeModules = []\n\n    trackAllBranchesEnabled = false // Optional: Default is False.\n\n    outputPath = 'OUTPUT_REPORT_PATH' // Optional: Default is project /build/ dir.\n}\n</code></pre> <p> Important Notes</p> <ul> <li>The plugin will create one automatically if there isn't an SQLite database. You only need to fill in the <code>name</code> and <code>path</code> (Recommended).</li> <li>Both <code>sqlite / mysql</code> can be used to config <code>local</code> or <code>ci</code> databases.</li> <li>Both <code>local</code> and <code>ci</code> configs are optional.</li> <li>If using the plugin in your CI/CD make sure the <code>CI=true</code> environment variable exists in your CI system environments and the <code>ci</code> database is configured.</li> <li>The <code>outputPath</code> can be skipped, it will generate the report inside the project build directory.</li> <li>By enabling <code>isTrackAllBranchesEnabled</code> analytics will be kicked on all branches.</li> <li><code>isEnabled</code> and <code>isTrackAllBranchesEnabled</code> are not mandatory since they have default values.</li> </ul> <p></p>"},{"location":"social-press/","title":"Social/Press","text":""},{"location":"social-press/#social","title":"Social","text":"<p>It's my pleasure that Gradle Analytics Plugin has been introduced in the below links:</p> <ul> <li>Gradle Newsletter (Oct 2022)</li> <li>Open Source Agenda</li> <li>Awesome Open Source</li> </ul>"},{"location":"special-thanks/","title":"Special Thanks","text":""},{"location":"special-thanks/#special-thanks","title":"Special Thanks","text":"<p>I am very proud to give special thanks to those around me in making and presenting this open source project.</p> <p>I am grateful to Yazdan Sharifi(@yazdan-sharifi2020), who helped write the plugin report renders.</p> <p>Best regards, Mehdi</p>"},{"location":"third-party/","title":"Third party","text":""},{"location":"third-party/#third-party","title":"Third party","text":"<p>All third-party dependencies that are being used in the plugin source:</p> <ul> <li>Gradle API 8.0.2</li> <li>Kotlin 1.8.10</li> <li>Coroutines 1.7.1</li> <li>Moshi 1.15.0</li> <li>Jetbrains Exposed 0.41.1</li> <li>Detekt 1.223.0</li> <li>Mockk 1.13.5</li> <li><code>mysql:mysql-connector-java:8.0.33</code></li> <li><code>org.xerial:sqlite-jdbc:3.42.0.0</code></li> <li><code>commons-io:commons-io:2.12.0</code></li> </ul>"},{"location":"upcoming-milestone/","title":"Upcoming Milestone","text":""},{"location":"upcoming-milestone/#upcoming-milestone","title":"Upcoming Milestone","text":"<p>Finally, the first stable version of the plugin, planned for release in <code>Milestone/1.0.1</code>, is scheduled to be published during the last week of May 2023. </p> <p>Upcoming Changes</p> <ul> <li> Fix bug report #105</li> <li> Fix bug report #121</li> <li> Upgrade gradle version to 8.0.2</li> <li> Upgrade kotlin and other dependencies</li> </ul> <p> I'm sorry for the delay in the project. It was caused by unexpected problems, like losing my job and facing personal difficulties, which made it hard for me to contribute effectively. I would really appreciate it if you could donate to support the development of this plugin.</p>"}]}